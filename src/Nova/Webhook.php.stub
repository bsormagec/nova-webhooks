<?php

namespace App\Nova;

use Dniccum\NovaWebhooks\Nova\WebhookResource;
use Illuminate\Http\Request;
use Laravel\Nova\Fields\BelongsTo;
use Laravel\Nova\Fields\ID;
use Laravel\Nova\Fields\Text;

class Webhook extends WebhookResource
{
    /**
     * Get the fields displayed by the Webhook resource.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function fields(Request $request)
    {
        return [
            ID::make()->sortable(),

            Text::make(__('nova-webhooks::nova.name'), 'name')
                ->help(__('nova-webhooks::nova.name_help'))
                ->placeholder(__('nova-webhooks::nova.name_placeholder'))
                ->sortable()
                ->rules('required', 'max:255'),

//            TODO figure out resolution
//            self::$urlField::make('Url', 'url')
//                ->help('The url or "recipient" of the webhook when it is dispatched by this application.')
//                ->sortable()
//                ->clickable(false)
//                ->rules('url', 'required'),

            Text::make(__('nova-webhooks::nova.url'), 'url')
                ->help(__('nova-webhooks::nova.url_help'))
                ->placeholder('https://hooks.zapier.com/hooks/catch/abcd1234')
                ->sortable()
                ->rules('required', 'url'),

            Text::make(__('nova-webhooks::nova.secret'), 'secret')
                ->help(__('nova-webhooks::nova.secret_help'))
                ->hideFromIndex()
                ->placeholder(null)
                ->updateRules('required', 'string')
                ->creationRules('nullable', 'string'),

            BelongsTo::make(__('nova-webhooks::nova.last_modified_by'), 'modifiedBy', User::class)
                ->exceptOnForms()
                ->readonly(),
        ];
    }
}
